# From mhart/alpine-node:latest as node
# # WORKDIR /app
# # COPY package*.json /app/
# # RUN npm install
# # COPY ./ /app/
# # ARG configuration=production
# # RUN npm run build --prod  
# # FROM nginx:1.15
# # COPY --from=node /usr/src/app/dist /usr/share/nginx/html
# # COPY  /nginx.conf /etc/nginx/conf.d/default.conf
# # Create a directory where our app will be placed


# #####################
# RUN mkdir -p /usr/src/app

# # Change directory so that our commands run inside this new directory

# WORKDIR /usr/src/app

# # Copy dependency definitions

# COPY package*.json ./

# # Install dependecies

# RUN npm install

# # Get all the code needed to run the app

# COPY . .

# # Run the angular in product
# RUN npm run build

# # Stage 2
# FROM nginx:1.13.12-alpine

# #copy dist content to html nginx folder, config nginx to point in index.html
# COPY --from=node /usr/src/app/dist /usr/share/nginx/html

# COPY ./nginx.conf /etc/nginx/conf.d/default.conf
FROM mhart/alpine-node:latest as builder

# build-time variables 
# prod|sandbox its value will be come from outside 
# ARG env=prod

# RUN apk update && apk add  make git

# # Move our files into directory name "app"
# WORKDIR /app
# COPY package.json package-lock.json  /app/
# RUN npm install @angular/cli@8.3.8 -g
# RUN  npm install
# COPY .  /app

# # Build with $env variable from outside
# RUN npm run ng build -- --prod --output-path=dist

# Build a small nginx image with static website
FROM nginx:alpine
RUN rm -rf /usr/share/nginx/html/*
COPY nginx.conf /etc/nginx/nginx.conf
COPY /dist/test /usr/share/nginx/html
# COPY --from=builder /app/dist /usr/share/nginx/html
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]